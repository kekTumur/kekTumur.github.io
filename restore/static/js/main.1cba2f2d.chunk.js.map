{"version":3,"sources":["components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/index.js","components/hoc/with-bookstore-service.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/cart-table/index.js","components/cart-table/cart-table.js","components/pages/home-page.js","components/pages/cart-page.js","components/header/index.js","components/header/header.js","components/app/index.js","components/app/app.js","components/error-boundary/index.js","components/error-boundary/error-boundary.js","services/bookstore-service.js","reducers/bookList.js","reducers/shoppingCart.js","reducers/index.js","store.js","index.js"],"names":["BookListItem","book","onAddedToCart","title","author","price","coverImage","className","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapper","props","bookstoreService","fetchBooks","dispatch","type","getBooks","then","data","payload","catch","err","bookAddedToCart","bookId","Spinner","ErrorIndicator","role","BookList","books","map","key","id","BookListContainer","this","loading","error","Component","connect","bookList","ownProps","CartTable","shoppingCart","items","cartItems","total","orderTotal","onIncrease","onDecrease","onDelete","item","idx","count","HomePage","CartPage","Header","forEach","to","App","document","body","addEventListener","e","preventDefault","path","component","exact","ErrorBoundary","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","updateBookList","action","undefined","updateOrder","c","find","itemIndex","findIndex","newItem","updateCartItem","updateCartItems","slice","updateShoppingCart","reducer","store","createStore","ReactDOM","render","value","getElementById"],"mappings":"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","file":"static/js/main.1cba2f2d.chunk.js","sourcesContent":["import BookListItem from './book-list-item';\r\nexport default BookListItem;","import React from 'react'\r\nimport './book-list-item.css';\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n    const { title, author, price, coverImage } = book;\r\n    \r\n    return (\r\n        <div className=\"book-list-item\">\r\n            <div className=\"book-cover\">\r\n                <img src={coverImage} alt=\"book\"/>\r\n            </div>\r\n            <div className=\"book-details\">\r\n                <span className=\"book-title\">{title}</span>\r\n                <div className=\"book-author\">{author}</div>\r\n                <div className=\"book-price\">${price}</div>\r\n                <button \r\n                    className=\"btn btn-info add-to-cart\"\r\n                    onClick={onAddedToCart}>Add to cart</button>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookListItem;","import React from 'react'\r\n\r\nconst {\r\n    Provider: BookstoreServiceProvider,\r\n    Consumer: BookstoreServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    BookstoreServiceProvider,\r\n    BookstoreServiceConsumer\r\n};","import withBookstoreService from './with-bookstore-service';\r\nexport default withBookstoreService;","import React from 'react'\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapper) => {\r\n    return (props) => {\r\n       return (\r\n           <BookstoreServiceConsumer>\r\n               {\r\n                   (bookstoreService) => {\r\n                       return (\r\n                           <Wrapper {...props} bookstoreService={bookstoreService} />\r\n                       );\r\n                   }\r\n               }\r\n           </BookstoreServiceConsumer>\r\n       );\r\n    }\r\n}\r\n\r\nexport default withBookstoreService;","const booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    };\r\n}\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOK_REQUEST'\r\n    };\r\n};\r\n\r\nconst booksError = error => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    };\r\n};\r\n\r\nconst fetchBooks = (bookstoreService, dispatch) => () => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then(data => dispatch(booksLoaded(data)))\r\n        .catch(err => dispatch(booksError(err)));\r\n}\r\n\r\nconst bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    };\r\n};\r\n\r\nconst bookDeletedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_DELETED_FROM_CART',\r\n        payload: bookId\r\n    };\r\n};\r\n\r\nconst allBooksDeletedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOKS_DELETED_FROM_CART',\r\n        payload: bookId\r\n    };\r\n};\r\n\r\nexport {\r\n    fetchBooks,\r\n    bookAddedToCart,\r\n    bookDeletedFromCart,\r\n    allBooksDeletedFromCart\r\n};","import Spinner from './spinner';\r\nexport default Spinner;","import React from 'react'\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"center\">\r\n            <div className=\"loadingio-spinner-spin-vk7dpoodkw9\"><div className=\"ldio-fxndvbcxiz\">\r\n            <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n            </div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import ErrorIndicator from './error-indicator';\r\nexport default ErrorIndicator;","import React from 'react'\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n            Something went wrong\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react'\r\nimport BookListItem from '../book-list-item';\r\nimport { connect } from 'react-redux';\r\nimport withBookstoreService from '../hoc';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nimport './book-list.css';\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n    return (\r\n        <ul className=\"book-list\">\r\n            {\r\n                books.map(book => {\r\n                    return (\r\n                        <li key={book.id}>\r\n                            <BookListItem \r\n                                book={book} \r\n                                onAddedToCart={() => onAddedToCart(book.id)}\r\n                            />\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n    }\r\n\r\n    render() {\r\n        const { books, loading, error, onAddedToCart } = this.props;\r\n        if (loading) {\r\n            return <Spinner />\r\n        }\r\n\r\n        if (error) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return <BookList onAddedToCart={onAddedToCart} books={books} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error }}) => {\r\n    return { books, loading, error }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const { bookstoreService } = ownProps;\r\n    return {\r\n        fetchBooks: fetchBooks(bookstoreService, dispatch),\r\n        onAddedToCart: (id) => dispatch(bookAddedToCart(id))\r\n    }\r\n};\r\n\r\n\r\nexport default withBookstoreService()(\r\n    connect(mapStateToProps, mapDispatchToProps)(BookListContainer));","import BookList from './book-list';\r\nexport default BookList;","import CartTable from './cart-table';\r\nexport default CartTable;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport './cart-table.css';\r\nimport { bookAddedToCart, bookDeletedFromCart, allBooksDeletedFromCart } from '../../actions';\r\n\r\nconst CartTable = ({ items, total, onIncrease, onDecrease, onDelete}) => {\r\n\r\n    const renderRow = (item, idx) => {\r\n        const { id, title, count, total} = item;\r\n        return (\r\n            <tr key={id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <button \r\n                        className=\"btn btn-outline-danger btn-sm\"\r\n                        onClick={() => onDelete(id)}>\r\n                        <i className=\"fa fa-trash-o\" />\r\n                    </button>\r\n                    <button \r\n                        className=\"btn btn-outline-success btn-sm\"\r\n                        onClick={() => onIncrease(id)}>\r\n                        <i className=\"fa fa-plus-circle\" />\r\n                    </button>\r\n                    <button \r\n                        className=\"btn btn-outline-warning btn-sm\"\r\n                        onClick={() => onDecrease(id)}>\r\n                        <i className=\"fa fa-minus-circle\" />\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-table\">\r\n            <h2>Your order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Item</th>\r\n                        <th>Count</th>\r\n                        <th>Price</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {\r\n                        items.map(renderRow)\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className=\"total\">\r\n                Total ${total}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal }}) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrease: (id) => dispatch(bookAddedToCart(id)),\r\n        onDecrease: (id) => dispatch(bookDeletedFromCart(id)),\r\n        onDelete: (id) => dispatch(allBooksDeletedFromCart(id))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartTable);","import React from 'react'\r\nimport BookList from '../book-list';\r\nimport CartTable from '../cart-table';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <BookList />\r\n            <CartTable />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import React from 'react'\r\nimport CartTable from '../cart-table';\r\n\r\nconst CartPage = () => {\r\n    return <CartTable />\r\n};\r\n\r\nexport default CartPage;","import Header from './header';\r\nexport default Header;","import React from 'react'\r\nimport './header.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Header = ({ cartItems, orderTotal }) => {\r\n    let items = 0;\r\n\r\n    cartItems.forEach(item => {\r\n        items += item.count\r\n    });\r\n\r\n    return (\r\n        <header className=\"header row\">\r\n            <Link to=\"/\">\r\n                <div className=\"logo text-dark\">ReStore</div>\r\n            </Link>\r\n            <Link to=\"/cartpage\">\r\n                <div className=\"text-dark shopping-cart\" >\r\n                    <i className=\"cart-icon fa fa-shopping-cart\" />\r\n                    { items } items (${orderTotal})\r\n                </div>\r\n            </Link>\r\n            \r\n        </header>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: {cartItems, orderTotal}}) => {\r\n    return { cartItems, orderTotal}\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);","import App from './app';\r\nexport default App;","import React, { Component } from 'react';\r\nimport { HomePage, CartPage } from '../pages';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Header from '../header';\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    componentDidMount() {\r\n        document.body.addEventListener('dblclick', e => e.preventDefault());\r\n    }\r\n    render() {\r\n        return (\r\n            <main role=\"main\" className=\"container\">\r\n                <Header />\r\n                <Switch>\r\n                    <Route \r\n                        path=\"/\"\r\n                        component={HomePage}\r\n                        exact \r\n                    />\r\n\r\n                    <Route \r\n                        path=\"/cartpage\"\r\n                        component={CartPage}\r\n                    />\r\n                </Switch>\r\n            </main>\r\n        );\r\n    }\r\n    \r\n}\r\n","import ErrorBoundary from './error-boundary';\r\nexport default ErrorBoundary;","import React, {Component} from 'react'\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n    state = {\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n","import ErrorIndicator from \"../components/error-indicator\";\r\n\r\nexport default class BookstoreService {\r\n    \r\n    data = [\r\n        {\r\n            id: 1,\r\n            title: 'Witcher I',\r\n            author: 'Andrzej Sapkowski',\r\n            price: 13,\r\n            coverImage: 'https://cv2.litres.ru/pub/c/elektronnaya-kniga/cover/19487529-andzhey-sapkovskiy-poslednee-zhelanie.jpg_330.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Witcher II',\r\n            author: 'Andrzej Sapkowski',\r\n            price: 14,\r\n            coverImage: 'https://img4.labirint.ru/rc/0eba3aa9ee7e03804527e2343a546e01/220x340/books36/354596/cover.jpg?1563691241'\r\n        }\r\n    ];\r\n\r\n    getBooks() {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                if (Math.random() > 0.75) {\r\n                    reject(new Error('Something bad happend'))\r\n                }\r\n                resolve(this.data);\r\n            }, 700);\r\n        });\r\n    }\r\n}","const updateBookList = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            books: [],\r\n            loading: true,\r\n            error: null,\r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'FETCH_BOOK_REQUEST':\r\n            return {\r\n                books: [],\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case 'FETCH_BOOKS_SUCCESS':\r\n            return {\r\n                books: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_BOOKS_FAILURE':\r\n            return {\r\n                books: [],\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state.bookList;\r\n    }\r\n}\r\n\r\nexport default updateBookList;","const updateOrder = (bookId, state, c) => {\r\n    const { shoppingCart: {cartItems}, bookList: {books} } = state;\r\n\r\n    const book = books.find(book => book.id === bookId);\r\n    const itemIndex = cartItems.findIndex(({id}) => id === bookId);\r\n    const item = cartItems[itemIndex];\r\n\r\n    const newItem = updateCartItem(book, item, c);\r\n    \r\n    return {\r\n        orderTotal: state.shoppingCart.orderTotal + book.price*c,\r\n        cartItems: updateCartItems(cartItems, newItem, itemIndex)\r\n    };\r\n}\r\n\r\nconst updateCartItems = (cartItems, item, idx) => {\r\n\r\n    if (item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            ...cartItems.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    if (idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ]\r\n    } else {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n            item,\r\n            ...cartItems.slice(idx + 1)\r\n        ];\r\n    }\r\n};\r\n\r\nconst updateCartItem = (book, item = {}, c) => {\r\n\r\n    const {id = book.id, count = 0, title = book.title, total = 0 } = item;\r\n\r\n    return {\r\n        id,\r\n        title,\r\n        count: count + c,\r\n        total: total + book.price*c\r\n    };\r\n};\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n    if (state === undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0\r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'BOOK_ADDED_TO_CART':\r\n            return updateOrder(action.payload, state, 1);\r\n\r\n        case 'BOOK_DELETED_FROM_CART':\r\n            return updateOrder(action.payload, state, -1);\r\n\r\n        case 'ALL_BOOKS_DELETED_FROM_CART':\r\n            const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\r\n            return updateOrder(action.payload, state, -item.count);\r\n\r\n        default:\r\n            return state.shoppingCart;\r\n    }\r\n}\r\n\r\nexport default updateShoppingCart;","import updateBookList from './bookList';\r\nimport updateShoppingCart from './shoppingCart';\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action)\r\n    };\r\n};\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom'; \r\n\r\nimport App from './components/app';\r\nimport ErrorBoundary from './components/error-boundary';\r\nimport BookstoreService from './services/bookstore-service';\r\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\r\n\r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ErrorBoundary>\r\n            <BookstoreServiceProvider value={bookstoreService}>\r\n                <Router>\r\n                    <App />\r\n                </Router>\r\n            </BookstoreServiceProvider>\r\n        </ErrorBoundary>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}