{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","styled","div","props","colored","AppHeader","liked","allPosts","as","SearchPanel","onChange","event","target","onChangeTerm","value","className","placeholder","this","Component","PostStatusFilter","buttons","name","label","map","clazz","filter","key","onClick","onFiltered","PostListItem","onDelete","onToggleImportant","onToggleLike","classNames","important","like","type","PostList","posts","elements","item","id","itemProps","ListGroup","PostAddForm","onInput","setState","add","preventDefault","onAdded","state","onSubmit","AppBlock","App","data","term","deleteItem","bind","addItem","searchPost","filterPosts","items","length","toLowerCase","indexOf","index","findIndex","elem","slice","body","newItem","nextId","old","visiblePosts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.593706c0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './app-header.css';\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: space-between;\r\n    h1 {\r\n        font-size: 26px;\r\n        color: ${props => props.colored ? 'red' : 'black'};\r\n        :hover {\r\n            color: blue;\r\n        }\r\n    }\r\n    h2 {\r\n        font-size: 1.2rem;\r\n        color: grey;\r\n    }\r\n`;\r\n\r\nconst AppHeader = ({liked, allPosts}) => {\r\n    return (\r\n        <Header as=\"a\">\r\n            <h1>Kalim Akhmetchin</h1>\r\n            <h2>{`${allPosts} записей, из них понравилось ${liked}`}</h2>\r\n        </Header>\r\n    );\r\n}\r\n\r\nexport default AppHeader;","import AppHeader from './app-header';\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    onChange = event => {\r\n        const target = event.target;\r\n        this.props.onChangeTerm(target.value);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <input \r\n                className=\"form-control search-input\" \r\n                placeholder=\"Поиск по записям\"\r\n                onChange={this.onChange}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import PostStatusFilter from './post-status-filter';\r\nexport default PostStatusFilter;","import React, { Component } from 'react'\r\n// import { Button } from 'reactstrap';\r\nimport './post-status-filter.css';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'Все'},\r\n            {name: 'like', label: 'Понравилось'}\r\n        ];\r\n    }\r\n    render() {\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const active = this.props.filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button \r\n                key={name}  \r\n                className={`btn ${clazz}`}\r\n                onClick={() => this.props.onFiltered(name)}\r\n                >{label}</button>\r\n            );\r\n        });\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import PostListItem from './post-list-item';\r\nexport default PostListItem;","import React, { Component } from 'react'\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component {\r\n    render() {\r\n        const {label, onDelete, onToggleImportant, onToggleLike, important, like} = this.props;\r\n\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n        if (important)  {\r\n            classNames += ' important';\r\n        }\r\n\r\n        if (like) {\r\n            classNames += ' like';\r\n        }\r\n\r\n        return (\r\n            <div className={classNames}>\r\n                <span \r\n                    className=\"app-list-item-label\"\r\n                    onClick={onToggleLike}>\r\n                    {label}</span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"btn-star btn-sm\"\r\n                        onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"/></button>\r\n                    \r\n                    <button \r\n                        onClick={onDelete}\r\n                        type=\"submit\" \r\n                        className=\"btn-trash btn-sm\">\r\n                         <i className=\"fa fa-trash-o\"/>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import PostList from './post-list';\r\nexport default PostList;","import React from 'react'\r\nimport PostListItem from '../post-list-item';\r\nimport { ListGroup } from 'reactstrap';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLike }) => {\r\n\r\n    const elements = posts.map(item => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <PostListItem \r\n                    onDelete={() => onDelete(id)} {...itemProps}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLike={() => onToggleLike(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ListGroup className=\"app-list\">\r\n            { elements }\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nexport default PostList;","import PostAddForm from './post-add-form';\r\nexport default PostAddForm;","import React, { Component } from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: ''\r\n        };\r\n    }\r\n\r\n    onInput = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        event.preventDefault();\r\n        this.props.onAdded(this.state.value);\r\n        this.setState({\r\n            value: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form \r\n            className=\"bottom-panel d-flex\"\r\n            onSubmit={this.add}>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"О чем вы думаете сейчас?\"\r\n                    className=\"form-control new-post-label\"\r\n                    value={this.state.value}\r\n                    onChange={this.onInput}\r\n                />\r\n    \r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\"\r\n                >Добавить</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport nextId from 'react-id-generator';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport PostStatusFilter from '../post-status-filter';\r\nimport PostList from '../post-list';\r\nimport PostAddForm from '../post-add-form';\r\nimport './app.css';\r\nimport styled from 'styled-components';\r\n\r\n// import style from './App.module.css';\r\n\r\nconst AppBlock = styled.div`\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n`;\r\n\r\n// const StyledAppBlock = styled(AppBlock)`\r\n//     background-color: gray;\r\n// `;\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {label: \"Going to learn React\", important: false, like: false, id: 'wd'},\r\n                {label: \"That is so good\", important: false, like: false, id: 'ded'},\r\n                {label: \"I need a break...\", important: false, like: false, id: 'sw'}\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        };\r\n\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLike = this.onToggleLike.bind(this);\r\n        this.searchPost = this.searchPost.bind(this);\r\n        this.onChangeTerm = this.onChangeTerm.bind(this);\r\n        this.filterPosts = this.filterPosts.bind(this);\r\n        this.onFiltered = this.onFiltered.bind(this);\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        } else {\r\n            return items.filter(({label}) => {\r\n                return label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteItem(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const newArray = [\r\n                ...data.slice(0, index),\r\n                ...data.slice(index + 1)\r\n            ];\r\n\r\n            return {\r\n                data: newArray\r\n            };\r\n        });\r\n    }\r\n\r\n    addItem(body) {\r\n        const newItem = {\r\n            label: body,\r\n            important: false,\r\n            id: nextId()\r\n        };\r\n\r\n        this.setState(({data}) => {\r\n            const newData = [...data, newItem];\r\n\r\n            return {\r\n                data: newData\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleImportant(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, important: !old.important};\r\n            const newArray = [\r\n                ...data.slice(0, index),\r\n                newItem,\r\n                ...data.slice(index + 1)\r\n            ];\r\n\r\n            return {\r\n                data: newArray\r\n            };\r\n        });\r\n    }\r\n\r\n    onToggleLike(id) {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, like: !old.like};\r\n            const newArray = [\r\n                ...data.slice(0, index),\r\n                newItem,\r\n                ...data.slice(index + 1)\r\n            ];\r\n\r\n            return {\r\n                data: newArray\r\n            };\r\n        });\r\n    }\r\n\r\n    onChangeTerm(term) {\r\n        this.setState({\r\n            term\r\n        });\r\n    }\r\n\r\n    filterPosts(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like);\r\n        } else {\r\n            return items;\r\n        }\r\n    }\r\n\r\n    onFiltered(filter) {\r\n        this.setState({\r\n            filter\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const liked = this.state.data.filter(item => item.like).length;\r\n        const allPosts = this.state.data.length;\r\n        const visiblePosts = this.filterPosts(this.searchPost(this.state.data, this.state.term), this.state.filter);\r\n\r\n        return (\r\n            <AppBlock>\r\n                <AppHeader \r\n                    liked={liked}\r\n                    allPosts={allPosts}\r\n                />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onChangeTerm={this.onChangeTerm}/>\r\n                    <PostStatusFilter \r\n                        filter={this.state.filter}\r\n                        onFiltered={this.onFiltered}\r\n                    />\r\n                </div>\r\n                <PostList \r\n                    posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLike={this.onToggleLike}\r\n                />\r\n                <PostAddForm onAdded={this.addItem}/>\r\n            </AppBlock>\r\n        );\r\n    }\r\n}\r\n  \r\n","import App from './app';\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(\n  <App/>,\n  document.querySelector('#root')\n);\n\n"],"sourceRoot":""}